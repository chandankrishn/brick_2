{"version":3,"sources":["file:///Users/chandankrishnani/CocosPractice/Brick_breaker/assets/scripts/Mainscript.ts"],"names":["_decorator","Component","Button","tween","Vec3","Prefab","instantiate","UITransform","Sprite","systemEvent","SystemEvent","SpriteFrame","Collider2D","Contact2DType","JsonAsset","director","ccclass","property","Mainscript","boxpattern","asset","titlelist","json","height","width","buttonpressed","Play_button","node","to","scale","delay","start","gamePlayStart","onBeginContact","selfCollider","otherCollider","contact","name","console","log","getComponent","destroy","pause","checkbasecollision","colider","base","on","BEGIN_CONTACT","bouncer","Breaker","addChild","redball","ball","setPosition","position","right","left","top","levels","current_level","Nextlevelcheck","ball_id","bricks_destroyed","tile_count","length","touchMove","event","current","getLocation","x","onLoad","EventType","TOUCH_MOVE"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, Node, Button, tween, Vec2, Vec3, Prefab, instantiate, UITransform, Sprite, systemEvent, SystemEvent, KeyCode, SpriteFrame, Collider2D, Contact2DType, IPhysics2DContact, JsonAsset, Script, director } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * Predefined variables\r\n * Name = Mainscript\r\n * DateTime = Wed Sep 22 2021 10:24:04 GMT+0530 (India Standard Time)\r\n * Author = chandan_krishnani\r\n * FileBasename = Mainscript.ts\r\n * FileBasenameNoExtension = Mainscript\r\n * URL = db://assets/scripts/Mainscript.ts\r\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/en/\r\n *\r\n */\r\n \r\n@ccclass('Mainscript')\r\nexport class Mainscript extends Component {\r\n    // [1]\r\n    // dummy = '';\r\n@property(Button)\r\nPlay_button:any;\r\n@property(Prefab)\r\nBreaker:any;\r\n@property(Sprite)\r\nbase:any;\r\n@property(Sprite)\r\nleft:any;\r\n@property(Sprite)\r\nright:any;\r\n@property(Sprite)\r\ntop:any;\r\n@property(Prefab)\r\nball:any;\r\n@property(Prefab)\r\nbrick:any;\r\n@property(SpriteFrame)\r\nbricks=[];\r\n@property(SpriteFrame)\r\ndamagedbricks=[];\r\n@property(JsonAsset)\r\nlevels:any=[];\r\nredball:any;\r\nbouncer:any;\r\nheight:number;\r\nwidth:number;\r\ntemp_bricks:any;\r\ntitlelist:string[]=[];\r\ntile_count:number=0;\r\ncurrent_level:number=0;\r\n\r\n\r\n\r\nboxpattern(asset:any)\r\n{\r\n    this.titlelist = asset.json[\"level1\"];\r\n    var height:number=(this.height/2);\r\n    var width:number=(this.width/2);\r\n    // console.log(width);\r\n    // console.log(screen.width);\r\n    // let row=this.titlelist[\"no_of_rows\"];\r\n    // let tile:number;\r\n    // var count:number=0;\r\n    // var columns=this.titlelist[\"no_of_columns\"];\r\n    // var scalex:any=(screen.width-100/columns)/this.brick.data.width;\r\n    // let tile_width:number=this.brick.data.width*scalex;\r\n\r\n    //    this.temp_bricks=instantiate(this.brick);\r\n    //     this.node.addChild(this.temp_bricks);\r\n    //     this.temp_bricks.setScale(scalex,1,1);\r\n    //     ++this.tile_count;\r\n    //     this.temp_bricks.setPosition(-(this.width/2)+150,height,0);\r\n        \r\n\r\n\r\n    // for(var i=0;i<row*columns;i++)\r\n    // {\r\n    //     if(this.titlelist[\"stucture\"][i]==1)\r\n    //     {\r\n    //     this.temp_bricks=instantiate(this.brick);\r\n    //     this.node.addChild(this.temp_bricks);\r\n    //     this.temp_bricks.setScale(scalex,1,1);\r\n    //     ++this.tile_count;\r\n    //     this.temp_bricks.setPosition(width,height,0);\r\n    //     width=width+tile_width;\r\n    //     }\r\n    //     if(this.titlelist[\"stucture\"][i]==0)\r\n    //     {\r\n    //         width=width+tile_width;\r\n    //     }\r\n    //     if(count>=columns-1)\r\n    //     {\r\n    //         count=-1;\r\n    //         height=height-60;\r\n    //         width=-(this.width/2)+200;\r\n    //     }\r\n    //     count++;   \r\n    // }\r\n\r\n}\r\n\r\n buttonpressed()\r\n {\r\n    tween(this.Play_button.node)\r\n    .to(0.2,{scale : new Vec3(2,2,2)})\r\n    .delay(0.1)\r\n    .to(0.2,{scale :new Vec3(1,1,1)})\r\n    .delay(0.3)\r\n    .to(0.2,{scale :new Vec3(0,0,0)})\r\n    .start();\r\n    this.gamePlayStart();\r\n \r\n }\r\n \r\n onBeginContact (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) \r\n {  \r\n    if(otherCollider.name==\"Ball_1<CircleCollider2D>\")\r\n    {\r\n        console.log(otherCollider);\r\n        otherCollider.getComponent(Sprite).destroy();\r\n        otherCollider.destroy();\r\n        console.log(\"Game over\");\r\n        director.pause();\r\n    }\r\n    console.log(otherCollider.name);\r\n}\r\n \r\n checkbasecollision()\r\n {\r\n     let colider=this.base.node.getComponent(Collider2D);\r\n     if(colider)\r\n     {\r\n         colider.on(Contact2DType.BEGIN_CONTACT,this.onBeginContact,this);\r\n     }\r\n\r\n }\r\n\r\n gamePlayStart()\r\n {\r\n     this.bouncer=instantiate(this.Breaker);\r\n     this.node.addChild(this.bouncer);\r\n     this.redball=instantiate(this.ball);\r\n     this.node.addChild(this.redball);\r\n     this.height=this.node.getComponent(UITransform).height;\r\n     this.width=this.node.getComponent(UITransform).width;\r\n     this.bouncer.setPosition(0,-(this.height/2)+100,0);\r\n     tween(this.base.node)\r\n     .to(0.5,{position : new Vec3(0,-(this.height/2),0)})\r\n     .start();\r\n\r\n     tween(this.right.node)\r\n     .to(0.5,{position : new Vec3((this.width/2),0,0)})\r\n     .start();\r\n\r\n     tween(this.left.node)\r\n     .to(0.5,{position : new Vec3(-(this.width/2),0,0)})\r\n     .start();\r\n\r\n     tween(this.top.node)\r\n     .to(0.5,{position : new Vec3(0,(this.height/2),0)})\r\n     .start();\r\n\r\n     this.checkbasecollision();\r\n     this.boxpattern(this.levels[this.current_level++]);\r\n }\r\n Nextlevelcheck()\r\n {\r\n    let ball_id:any=this.redball.getComponent('Ball').bricks_destroyed;\r\n    if(this.tile_count==ball_id.length)\r\n    {\r\n\r\n        this.redball.destroy();\r\n        this.bouncer.destroy();\r\n        this.gamePlayStart();\r\n\r\n\r\n    }\r\n    \r\n }\r\n\r\n    touchMove(event:any)\r\n    {\r\n        let current:number;\r\n        if(event.getLocation().x>(this.width/2))\r\n        {\r\n            current=event.getLocation().x-this.width/2;\r\n        }\r\n        \r\n        else\r\n        {\r\n            current=-((this.width/2)-event.getLocation().x);\r\n        }\r\n       \r\n        if(current<this.width/2-70 && current>-(this.width/2)+70)\r\n        {\r\n        this.bouncer.setPosition(current,-(this.height/2)+100,0);\r\n        }\r\n        this.Nextlevelcheck();\r\n    }\r\n   \r\n\r\n\r\n    onLoad()\r\n    {\r\n        // systemEvent.on(SystemEvent.EventType.KEY_DOWN,this.mouseMove,this);\r\n        systemEvent.on(SystemEvent.EventType.TOUCH_MOVE,this.touchMove,this);\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * [1] Class member could be defined like this.\r\n * [2] Use `property` decorator if your want the member to be serializable.\r\n * [3] Your initialization goes here.\r\n * [4] Your update function goes here.\r\n *\r\n * Learn more about scripting: https://docs.cocos.com/creator/3.3/manual/en/scripting/\r\n * Learn more about CCClass: https://docs.cocos.com/creator/3.3/manual/en/scripting/ccclass.html\r\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.3/manual/en/scripting/life-cycle-callbacks.html\r\n */\r\n"]}