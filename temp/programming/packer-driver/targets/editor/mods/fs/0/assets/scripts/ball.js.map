{"version":3,"sources":["file:///Users/chandankrishnani/CocosPractice/Brick_breaker/assets/scripts/ball.ts"],"names":["_decorator","Component","Contact2DType","Collider2D","Sprite","SpriteFrame","ccclass","property","Ball","start","collider","node","getComponent","on","BEGIN_CONTACT","onBeginContact","selfCollider","otherCollider","contact","name","flag","i","bricks","length","uuid","bricks_destroyed","push","destroy","spriteFrame","destroyed"],"mappings":";;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAA4CC,MAAAA,a,OAAAA,a;AAAgCC,MAAAA,U,OAAAA,U;AAA+BC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;;;;;;;OAClI;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;sBAGaQ,I,WADZF,OAAO,CAAC,MAAD,C,UAqBPC,QAAQ,CAACF,WAAD,C,oCArBT,MACaG,IADb,SAC0BP,SAD1B,CACoC;AAAA;AAAA;;AAAA;;AAAA,0CAsBzB,EAtByB;;AAAA,oDAuBf,EAvBe;;AAAA,gDAwBf,KAxBe;AAAA;;AAChC;AACA;AAEA;AACA;AACA;AAGAQ,QAAAA,KAAK,GAAI;AACL,cAAIC,QAAQ,GAAG,KAAKC,IAAL,CAAUC,YAAV,CAAuBT,UAAvB,CAAf;;AACA,cAAIO,QAAJ,EAAc;AACVA,YAAAA,QAAQ,CAACG,EAAT,CAAYX,aAAa,CAACY,aAA1B,EAAyC,KAAKC,cAA9C,EAA8D,IAA9D;AAEH,WALI,CAOT;AACA;AACA;;AACH;;AAMDA,QAAAA,cAAc,CAAEC,YAAF,EAA4BC,aAA5B,EAAuDC,OAAvD,EAA0F;AACpG;AAEA,cAAGD,aAAa,CAACE,IAAd,IAAoB,wBAAvB,EACA;AACI,gBAAIC,IAAY,GAAC,KAAjB;;AACA,iBAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAKC,MAAL,CAAYC,MAA1B,EAAiCF,CAAC,EAAlC,EACA;AAEI,kBAAGJ,aAAa,CAACO,IAAd,KAAqB,KAAKF,MAAL,CAAYD,CAAZ,CAAxB,EACA;AACID,gBAAAA,IAAI,GAAC,IAAL;AACA;AACH;AAEJ;;AACD,gBAAGA,IAAH,EACA;AACI,mBAAKK,gBAAL,CAAsBC,IAAtB,CAA2BT,aAAa,CAACO,IAAzC;AACAP,cAAAA,aAAa,CAACL,YAAd,CAA2BR,MAA3B,EAAmCuB,OAAnC;AACAV,cAAAA,aAAa,CAACU,OAAd;AAEH,aAND,MAQA;AACA,mBAAKL,MAAL,CAAYI,IAAZ,CAAiBT,aAAa,CAACO,IAA/B;AACAP,cAAAA,aAAa,CAACL,YAAd,CAA2BR,MAA3B,EAAmCwB,WAAnC,GAA+C,KAAKC,SAApD;AACC;AAGJ;AAKJ;;AA5DmC,O;;;;;;AAiEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA","sourcesContent":["\r\nimport { _decorator, Component, Node, Collider, ICollisionEvent, Contact2DType, PhysicsSystem2D, Collider2D, IPhysics2DContact, Sprite, SpriteFrame } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * Predefined variables\r\n * Name = Ball\r\n * DateTime = Thu Sep 23 2021 10:24:27 GMT+0530 (India Standard Time)\r\n * Author = chandan_krishnani\r\n * FileBasename = ball.ts\r\n * FileBasenameNoExtension = ball\r\n * URL = db://assets/scripts/ball.ts\r\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/en/\r\n *\r\n */\r\n \r\n@ccclass('Ball')\r\nexport class Ball extends Component {\r\n    // [1]\r\n    // dummy = '';\r\n\r\n    // [2]\r\n    // @property\r\n    // serializableDummy = 0;\r\n   \r\n\r\n    start () {\r\n        let collider = this.node.getComponent(Collider2D);\r\n        if (collider) {\r\n            collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n            \r\n        }\r\n\r\n    // update (deltaTime: number) {\r\n    //     // [4]\r\n    // }\r\n}\r\n@property(SpriteFrame)\r\ndestroyed:null;\r\nbricks:any=[];\r\nbricks_destroyed:any=[];\r\nalldestroyed:boolean=false;\r\nonBeginContact (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n    // will be called once when two colliders begin to contact\r\n   \r\n    if(otherCollider.name==\"Brick_0<BoxCollider2D>\")\r\n    {\r\n        let flag:boolean=false;\r\n        for(let i=0;i<this.bricks.length;i++)\r\n        {\r\n            \r\n            if(otherCollider.uuid===this.bricks[i])\r\n            {\r\n                flag=true;\r\n                break;\r\n            }\r\n            \r\n        }\r\n        if(flag)\r\n        {\r\n            this.bricks_destroyed.push(otherCollider.uuid);\r\n            otherCollider.getComponent(Sprite).destroy();\r\n            otherCollider.destroy();\r\n\r\n        }\r\n        else\r\n        {\r\n        this.bricks.push(otherCollider.uuid);\r\n        otherCollider.getComponent(Sprite).spriteFrame=this.destroyed;\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    \r\n\r\n}\r\n}\r\n\r\n\r\n\r\n/**\r\n * [1] Class member could be defined like this.\r\n * [2] Use `property` decorator if your want the member to be serializable.\r\n * [3] Your initialization goes here.\r\n * [4] Your update function goes here.\r\n *\r\n * Learn more about scripting: https://docs.cocos.com/creator/3.3/manual/en/scripting/\r\n * Learn more about CCClass: https://docs.cocos.com/creator/3.3/manual/en/scripting/ccclass.html\r\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.3/manual/en/scripting/life-cycle-callbacks.html\r\n */\r\n   \r\n//     mouseMove(event:any)\r\n//     {\r\n//         if(this.bouncer.position.x<this.width/2-70 && this.bouncer.position.x+130 >-(this.width/2)+70)\r\n//         {\r\n//         switch(event.keyCode)\r\n//         {\r\n           \r\n//         case KeyCode.ARROW_LEFT:\r\n       \r\n//             tween(this.bouncer)\r\n//             .by(0.1,{position : new Vec3(-30,0,0)})\r\n//            .start();\r\n//            break;\r\n            \r\n            \r\n          \r\n//         case KeyCode.ARROW_RIGHT:\r\n//             console.log(\"Arrow right key\");\r\n           \r\n//             tween(this.bouncer)\r\n//             .by(0.1,{position : new Vec3(30,0,0)})\r\n//             .start();\r\n//             break;\r\n\r\n//         }\r\n//     }\r\n//     else\r\n//     {\r\n//         if(this.bouncer.position.x<this.width/2+70)\r\n//         {\r\n//             switch(event.keyCode)\r\n//             {\r\n//                 case KeyCode.ARROW_RIGHT:\r\n//                 console.log(\"Arrow right key\");\r\n               \r\n//                 tween(this.bouncer)\r\n//                 .by(0.1,{position : new Vec3(30,0,0)})\r\n//                 .start();\r\n//                 break;\r\n//             }\r\n           \r\n//     }\r\n//     else\r\n//     {\r\n       \r\n//         switch(event.keyCode)\r\n//         {\r\n           \r\n//         case KeyCode.ARROW_LEFT:\r\n       \r\n//             tween(this.bouncer)\r\n//             .by(0.1,{position : new Vec3(-30,0,0)})\r\n//            .start();\r\n//            break;\r\n\r\n//     }\r\n\r\n//     }\r\n\r\n//     }\r\n// }\r\n"]}