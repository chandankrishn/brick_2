{"version":3,"sources":["file:///Users/chandankrishnani/Downloads/Brick_breaker/assets/scripts/Mainscript.ts"],"names":["_decorator","Component","Button","tween","Vec3","Prefab","instantiate","UITransform","Sprite","systemEvent","SystemEvent","SpriteFrame","Collider2D","Contact2DType","JsonAsset","director","ccclass","property","tiles","Mainscript","Are_they_rewardBrick","i","reward_bricks","titlelist","j","length","colorbrick","boxpattern","asset","json","row","columns","height","width","scalex","brick","data","startpositionx","startpositiony","brick_sizex","brick_sizey","positionx","positiony","count","temp_bricks","node","addChild","setScale","getComponent","spriteFrame","Normal_bricks","brokensprite","name","reward","setPosition","tile_count","buttonpressed","Play_button","to","scale","delay","start","gamePlayStart","onBeginContact","selfCollider","otherCollider","contact","destroy","console","log","pause","checkbasecollision","colider","base","on","BEGIN_CONTACT","bouncer","Breaker","redball","ball","position","right","left","top","levels","current_level","Nextlevelcheck","ball_id","bricks_destroyed","touchMove","event","current","getLocation","x","onLoad","EventType","TOUCH_MOVE"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, Node, Button, tween, Vec2, Vec3, Prefab, instantiate, UITransform, Sprite, systemEvent, SystemEvent, KeyCode, SpriteFrame, Collider2D, Contact2DType, IPhysics2DContact, JsonAsset, Script, director } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n/**\r\n * Predefined variables\r\n * Name = Mainscript\r\n * DateTime = Wed Sep 22 2021 10:24:04 GMT+0530 (India Standard Time)\r\n * Author = chandan_krishnani\r\n * FileBasename = Mainscript.ts\r\n * FileBasenameNoExtension = Mainscript\r\n * URL = db://assets/scripts/Mainscript.ts\r\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/en/\r\n *\r\n */\r\nenum tiles\r\n{\r\n    brick_0=0,\r\n    brick_1,\r\n    brick_2,\r\n    brick_3,\r\n    brick_5,\r\n    brick_6,\r\n    brick_7,\r\n\r\n}\r\n\r\n@ccclass('Mainscript')\r\nexport class Mainscript extends Component {\r\n    \r\n@property(Button)\r\nPlay_button:any;\r\n@property(Prefab)\r\nBreaker:any;\r\n@property(Sprite)\r\nbase:any;\r\n@property(Sprite)\r\nleft:any;\r\n@property(Sprite)\r\nright:any;\r\n@property(Sprite)\r\ntop:any;\r\n@property(Prefab)\r\nball:any;\r\n@property(Prefab)\r\nbrick:any;\r\n@property(SpriteFrame)\r\nNormal_bricks=[];\r\n@property(JsonAsset)\r\nlevels:any=[];\r\nredball:any;\r\nbouncer:any;\r\nheight:number;\r\nwidth:number;\r\ntemp_bricks:any;\r\ntitlelist:string[]=[];\r\ntile_count:number=0;\r\ncurrent_level:number=0;\r\n\r\n\r\nAre_they_rewardBrick(i:number)\r\n{\r\n    var reward_bricks=this.titlelist[\"rewards_tile\"];\r\n    for(var j=0;j<reward_bricks.length;j++)\r\n    {\r\n        if(reward_bricks[j]==i)\r\n        {\r\n           \r\n            return true;\r\n\r\n        }\r\n        \r\n    }\r\n    return false;\r\n}\r\ncolorbrick()\r\n{\r\n\r\n}\r\n\r\n\r\n\r\n\r\nboxpattern(asset:any)\r\n{\r\n    this.titlelist = asset.json[\"level1\"];\r\n    let row=this.titlelist[\"no_of_rows\"];\r\n    var columns=this.titlelist[\"no_of_columns\"];\r\n    var height:number=(this.height/2);\r\n    var width:number=-(this.width/2);\r\n    var scalex:any=((this.width-50)/columns)/this.brick.data.width;\r\n\r\n        var startpositionx:number=(((this.brick.data.width)*scalex)/2)+25;\r\n        var startpositiony:number=(((this.brick.data.height)*scalex)/2)+25;\r\n        var brick_sizex:number=0;\r\n        var brick_sizey:number=0;\r\n        var positionx:number=0;\r\n        var positiony:number=0;\r\n\r\n        var count:number=1;\r\n       for(var i=0;i<row*columns;i++)\r\n       {\r\n        if(this.titlelist[\"stucture\"][i]>=1)\r\n        {\r\n            this.temp_bricks=instantiate(this.brick);\r\n              this.node.addChild(this.temp_bricks);\r\n              \r\n              this.temp_bricks.setScale(scalex,scalex,1);\r\n              this.temp_bricks.getComponent(Sprite).spriteFrame=this.Normal_bricks[this.titlelist[\"stucture\"][i]-1];\r\n              this.temp_bricks.brokensprite=this.titlelist[\"stucture\"][i]-1;\r\n\r\n              this.temp_bricks.name=\"Normal_bricks\";\r\n              var reward=this.Are_they_rewardBrick(i);\r\n              \r\n              this.temp_bricks.reward_bricks=reward;\r\n              \r\n              positionx=width+startpositionx+brick_sizex;        \r\n              positiony=height-(startpositiony + brick_sizey);\r\n              this.temp_bricks.setPosition(positionx,positiony,0);\r\n              brick_sizex=((this.brick.data.width)*scalex)+brick_sizex;\r\n              ++this.tile_count;\r\n        }\r\n        if(this.titlelist[\"stucture\"][i]==0)\r\n        {\r\n            brick_sizex=((this.brick.data.width)*scalex)+brick_sizex;\r\n        }\r\n        if(count==columns)\r\n        {\r\n            count=0;\r\n            brick_sizey=(this.brick.data.height)*scalex + brick_sizey + 10;\r\n            brick_sizex=0;\r\n        }\r\n        count++;\r\n\r\n       }\r\n}\r\n buttonpressed()\r\n {\r\n    tween(this.Play_button.node)\r\n    .to(0.2,{scale : new Vec3(2,2,2)})\r\n    .delay(0.1)\r\n    .to(0.2,{scale :new Vec3(1,1,1)})\r\n    .delay(0.3)\r\n    .to(0.2,{scale :new Vec3(0,0,0)})\r\n    .start();\r\n    this.gamePlayStart();\r\n \r\n }\r\n onBeginContact (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) \r\n {  \r\n    if(otherCollider.name==\"Ball_1<CircleCollider2D>\")\r\n    {\r\n        otherCollider.getComponent(Sprite).destroy();\r\n        otherCollider.destroy();\r\n        console.log(\"Game over\");\r\n        director.pause();\r\n    }\r\n}\r\n \r\n checkbasecollision()\r\n {\r\n     let colider=this.base.node.getComponent(Collider2D);\r\n     if(colider)\r\n     {\r\n         colider.on(Contact2DType.BEGIN_CONTACT,this.onBeginContact,this);\r\n     }\r\n\r\n }\r\n\r\n gamePlayStart()\r\n {\r\n     this.bouncer=instantiate(this.Breaker);\r\n     this.node.addChild(this.bouncer);\r\n     this.redball=instantiate(this.ball);\r\n     this.node.addChild(this.redball);\r\n     this.height=this.node.getComponent(UITransform).height;\r\n     this.width=this.node.getComponent(UITransform).width;\r\n     this.bouncer.setPosition(0,-(this.height/2)+100,0);\r\n     tween(this.base.node)\r\n     .to(0.5,{position : new Vec3(0,-(this.height/2),0)})\r\n     .start();\r\n\r\n     tween(this.right.node)\r\n     .to(0.5,{position : new Vec3((this.width/2),0,0)})\r\n     .start();\r\n\r\n     tween(this.left.node)\r\n     .to(0.5,{position : new Vec3(-(this.width/2),0,0)})\r\n     .start();\r\n\r\n     tween(this.top.node)\r\n     .to(0.5,{position : new Vec3(0,(this.height/2),0)})\r\n     .start();\r\n     this.checkbasecollision();\r\n     this.boxpattern(this.levels[this.current_level++]);\r\n }\r\n Nextlevelcheck()\r\n {\r\n    let ball_id:any=this.redball.getComponent('Ball').bricks_destroyed;\r\n    if(this.tile_count==ball_id.length)\r\n    {\r\n        this.redball.getComponent('Ball').bricks_destroyed.length=0;\r\n        this.tile_count=0;\r\n        this.redball.destroy();\r\n        this.bouncer.destroy();\r\n        this.gamePlayStart();\r\n    }\r\n    \r\n }\r\n    touchMove(event:any)\r\n    {\r\n        let current:number;\r\n        if(event.getLocation().x>(this.width/2))\r\n        {\r\n            current=event.getLocation().x-this.width/2;\r\n        }\r\n        \r\n        else\r\n        {\r\n            current=-((this.width/2)-event.getLocation().x);\r\n        }\r\n       \r\n        if(current<this.width/2-70 && current>-(this.width/2)+70)\r\n        {\r\n        this.bouncer.setPosition(current,-(this.height/2)+100,0);\r\n        }\r\n        this.Nextlevelcheck()\r\n     \r\n    }\r\n    onLoad()\r\n    {\r\n        // systemEvent.on(SystemEvent.EventType.KEY_DOWN,this.mouseMove,this);\r\n        systemEvent.on(SystemEvent.EventType.TOUCH_MOVE,this.touchMove,this);\r\n        \r\n    }\r\n}\r\n\r\n/**\r\n * [1] Class member could be defined like this.\r\n * [2] Use `property` decorator if your want the member to be serializable.\r\n * [3] Your initialization goes here.\r\n * [4] Your update function goes here.\r\n *\r\n * Learn more about scripting: https://docs.cocos.com/creator/3.3/manual/en/scripting/\r\n * Learn more about CCClass: https://docs.cocos.com/creator/3.3/manual/en/scripting/ccclass.html\r\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.3/manual/en/scripting/life-cycle-callbacks.html\r\n */\r\n"]}