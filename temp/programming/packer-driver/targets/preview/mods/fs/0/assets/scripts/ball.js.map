{"version":3,"sources":["file:///Users/chandankrishnani/Downloads/Brick_breaker/assets/scripts/ball.ts"],"names":["_decorator","Component","Contact2DType","Collider2D","Sprite","SpriteFrame","ccclass","property","Ball","start","collider","node","getComponent","on","BEGIN_CONTACT","onBeginContact","bg_node","background","bg","selfCollider","otherCollider","contact","name","colider_type","par","getParent","colidetime","hasrewards","testing","position","x","y","z","bricks_destroyed","push","uuid","destroy","removeChild","spriteFrame","damaged_bricks","brickindex"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAA4CC,MAAAA,a,OAAAA,a;AAAgCC,MAAAA,U,OAAAA,U;AAA+BC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;;;;;;;AAChIC,MAAAA,O,GAAsBN,U,CAAtBM,O;AAASC,MAAAA,Q,GAAaP,U,CAAbO,Q;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;sBAGaC,I,WADZF,OAAO,CAAC,MAAD,C,UAUHC,QAAQ,CAACF,WAAD,C;;;;;;;;;;;;;;mEAEE,E;;6EACU,E;;yEACA,K;;4EACD,I;;+DAGb,I;;;;;;;eAKPI,K,GAAA,iBAAS;AACL,cAAIC,QAAQ,GAAG,KAAKC,IAAL,CAAUC,YAAV,CAAuBT,UAAvB,CAAf;;AACA,cAAIO,QAAJ,EAAc;AACVA,YAAAA,QAAQ,CAACG,EAAT,CAAYX,aAAa,CAACY,aAA1B,EAAyC,KAAKC,cAA9C,EAA8D,IAA9D;AAEH,WALI,CAOT;AACA;AACA;;AACH,S;;eACDC,O,GAAA,iBAAQC,UAAR,EACA;AACI,eAAKC,EAAL,GAAQD,UAAR;AAGH,S;;eAEDF,c,GAAA,wBAAgBI,YAAhB,EAA0CC,aAA1C,EAAqEC,OAArE,EAAwG;AAGrG,cAAIC,IAAW,GAAC,eAAhB;AACA,cAAIC,YAAmB,GAAC,iBAAxB;AACA,cAAIC,GAAQ,GAAG,KAAKb,IAAL,CAAUc,SAAV,EAAf;;AAEC,cAAGL,aAAa,CAACE,IAAd,IAAoBA,IAAI,GAACC,YAA5B,EACA;AACI,gBAAGH,aAAa,CAACT,IAAd,CAAmBe,UAAnB,GAA8B,CAAjC,EACA;AAEI,kBAAGN,aAAa,CAACT,IAAd,CAAmBgB,UAAtB,EACA;AACI,qBAAKT,EAAL,CAAQU,OAAR,CAAgBR,aAAa,CAACT,IAAd,CAAmBkB,QAAnB,CAA4BC,CAA5C,EAA8CV,aAAa,CAACT,IAAd,CAAmBkB,QAAnB,CAA4BE,CAA1E,EAA4EX,aAAa,CAACT,IAAd,CAAmBkB,QAAnB,CAA4BG,CAAxG;AAEH;;AACD,mBAAKC,gBAAL,CAAsBC,IAAtB,CAA2Bd,aAAa,CAACe,IAAzC;AACAf,cAAAA,aAAa,CAACR,YAAd,CAA2BR,MAA3B,EAAmCgC,OAAnC;AACAZ,cAAAA,GAAG,CAACa,WAAJ,CAAgBjB,aAAhB;AACAA,cAAAA,aAAa,CAACgB,OAAd;AAEH,aAbD,MAeA;AACAhB,cAAAA,aAAa,CAACR,YAAd,CAA2BR,MAA3B,EAAmCkC,WAAnC,GAA+C,KAAKC,cAAL,CAAoBnB,aAAa,CAACT,IAAd,CAAmB6B,UAAvC,CAA/C;AACApB,cAAAA,aAAa,CAACT,IAAd,CAAmBe,UAAnB,GAA8BN,aAAa,CAACT,IAAd,CAAmBe,UAAnB,GAA8B,CAA5D;AACC;AAGJ;AAKJ,S;;;QA3EyBzB,S;;;;;iBAUH,E;;;AAsEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA","sourcesContent":["\r\nimport { _decorator, Component, Node, Collider, ICollisionEvent, Contact2DType, PhysicsSystem2D, Collider2D, IPhysics2DContact, Sprite, SpriteFrame, Prefab, instantiate } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * Predefined variables\r\n * Name = Ball\r\n * DateTime = Thu Sep 23 2021 10:24:27 GMT+0530 (India Standard Time)\r\n * Author = chandan_krishnani\r\n * FileBasename = ball.ts\r\n * FileBasenameNoExtension = ball\r\n * URL = db://assets/scripts/ball.ts\r\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/en/\r\n *\r\n */\r\n \r\n@ccclass('Ball')\r\nexport class Ball extends Component {\r\n    // [1]\r\n    // dummy = '';\r\n\r\n    // [2]\r\n    // @property\r\n    // serializableDummy = 0;\r\n\r\n    \r\n    @property(SpriteFrame)\r\n    damaged_bricks:any=[];\r\n    bricks:any=[];\r\n    bricks_destroyed:any=[];\r\n    alldestroyed:boolean=false;\r\n    reword_instance:any=null;\r\n\r\n\r\n    bg:any=null;\r\n\r\n\r\n   \r\n\r\n    start () {\r\n        let collider = this.node.getComponent(Collider2D);\r\n        if (collider) {\r\n            collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n            \r\n        }\r\n\r\n    // update (deltaTime: number) {\r\n    //     // [4]\r\n    // }\r\n}\r\nbg_node(background:any)\r\n{\r\n    this.bg=background;\r\n    \r\n    \r\n}\r\n\r\nonBeginContact (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n\r\n    \r\n   var name:string=\"Normal_bricks\";\r\n   var colider_type:string=\"<BoxCollider2D>\";\r\n   var par: any = this.node.getParent();\r\n   \r\n    if(otherCollider.name==name+colider_type)\r\n    {\r\n        if(otherCollider.node.colidetime<1)\r\n        {\r\n            \r\n            if(otherCollider.node.hasrewards)\r\n            {\r\n                this.bg.testing(otherCollider.node.position.x,otherCollider.node.position.y,otherCollider.node.position.z)\r\n                \r\n            }\r\n            this.bricks_destroyed.push(otherCollider.uuid);\r\n            otherCollider.getComponent(Sprite).destroy();\r\n            par.removeChild(otherCollider);\r\n            otherCollider.destroy();\r\n           \r\n        }\r\n        else\r\n        {\r\n        otherCollider.getComponent(Sprite).spriteFrame=this.damaged_bricks[otherCollider.node.brickindex];\r\n        otherCollider.node.colidetime=otherCollider.node.colidetime-1;\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    \r\n\r\n}\r\n}\r\n\r\n\r\n\r\n/**\r\n * [1] Class member could be defined like this.\r\n * [2] Use `property` decorator if your want the member to be serializable.\r\n * [3] Your initialization goes here.\r\n * [4] Your update function goes here.\r\n *\r\n * Learn more about scripting: https://docs.cocos.com/creator/3.3/manual/en/scripting/\r\n * Learn more about CCClass: https://docs.cocos.com/creator/3.3/manual/en/scripting/ccclass.html\r\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.3/manual/en/scripting/life-cycle-callbacks.html\r\n */\r\n   \r\n//     mouseMove(event:any)\r\n//     {\r\n//         if(this.bouncer.position.x<this.width/2-70 && this.bouncer.position.x+130 >-(this.width/2)+70)\r\n//         {\r\n//         switch(event.keyCode)\r\n//         {\r\n           \r\n//         case KeyCode.ARROW_LEFT:\r\n       \r\n//             tween(this.bouncer)\r\n//             .by(0.1,{position : new Vec3(-30,0,0)})\r\n//            .start();\r\n//            break;\r\n            \r\n            \r\n          \r\n//         case KeyCode.ARROW_RIGHT:\r\n//             console.log(\"Arrow right key\");\r\n           \r\n//             tween(this.bouncer)\r\n//             .by(0.1,{position : new Vec3(30,0,0)})\r\n//             .start();\r\n//             break;\r\n\r\n//         }\r\n//     }\r\n//     else\r\n//     {\r\n//         if(this.bouncer.position.x<this.width/2+70)\r\n//         {\r\n//             switch(event.keyCode)\r\n//             {\r\n//                 case KeyCode.ARROW_RIGHT:\r\n//                 console.log(\"Arrow right key\");\r\n               \r\n//                 tween(this.bouncer)\r\n//                 .by(0.1,{position : new Vec3(30,0,0)})\r\n//                 .start();\r\n//                 break;\r\n//             }\r\n           \r\n//     }\r\n//     else\r\n//     {\r\n       \r\n//         switch(event.keyCode)\r\n//         {\r\n           \r\n//         case KeyCode.ARROW_LEFT:\r\n       \r\n//             tween(this.bouncer)\r\n//             .by(0.1,{position : new Vec3(-30,0,0)})\r\n//            .start();\r\n//            break;\r\n\r\n//     }\r\n\r\n//     }\r\n\r\n//     }\r\n// }\r\n"]}